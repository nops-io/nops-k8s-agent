# Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "dcgm-exporter.fullname" . }}
  namespace: {{ include "dcgm-exporter.namespace" . }}
  labels:
    {{- include "dcgm-exporter.labels" . | nindent 4 }}
    app.kubernetes.io/component: "dcgm-exporter"
spec:
  updateStrategy:
    type: RollingUpdate
    {{- with .Values.dcgmExporter.rollingUpdate }}
    rollingUpdate:
      maxUnavailable: {{ .maxUnavailable }}
      maxSurge: {{ .maxSurge }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "dcgm-exporter.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: "dcgm-exporter"
  template:
    metadata:
      labels:
        {{- include "dcgm-exporter.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: "dcgm-exporter"
      {{- if .Values.dcgmExporter.podLabels }}
        {{- toYaml .Values.dcgmExporter.podLabels | nindent 8 }}
      {{- end }}
      {{- if .Values.dcgmExporter.podAnnotations }}
      annotations:
        {{- toYaml .Values.dcgmExporter.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.dcgmExporter.runtimeClassName }}
      runtimeClassName: {{ .Values.dcgmExporter.runtimeClassName }}
      {{- end }}
      priorityClassName: {{ .Values.dcgmExporter.priorityClassName | default "system-node-critical" }}
      {{- if .Values.dcgmExporter.hostNetwork }}
      hostNetwork: {{ .Values.dcgmExporter.hostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- with .Values.dcgmExporter.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dcgm-exporter.serviceAccountName" . }}
      {{- if .Values.dcgmExporter.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.dcgmExporter.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.dcgmExporter.affinity }}
      affinity:
        {{- toYaml .Values.dcgmExporter.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.dcgmExporter.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.dcgmExporter.nodeSelector | nindent 8 }}
      {{- end }}
      {{- with .Values.dcgmExporter.tolerations }}
      tolerations:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
      - name: "pod-gpu-resources"
        hostPath:
          path: {{ .Values.dcgmExporter.kubeletPath }}
      {{- range .Values.dcgmExporter.extraHostVolumes }}
      - name: {{ .name | quote }}
        hostPath:
          path: {{ .hostPath | quote }}
      {{- end }}
      {{- with .Values.dcgmExporter.extraConfigMapVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      containers:
      - name: exporter
        securityContext:
          {{- toYaml .Values.dcgmExporter.securityContext | nindent 10 }}
        {{- if .Values.dcgmExporter.image.tag }}
        image: "{{ .Values.dcgmExporter.image.repository }}:{{ .Values.dcgmExporter.image.tag }}"
        {{- else }}
        image: "{{ .Values.dcgmExporter.image.repository }}:{{ .Chart.AppVersion }}"
        {{- end }}
        imagePullPolicy: "{{ .Values.dcgmExporter.image.pullPolicy }}"
        args:
        {{- range $.Values.dcgmExporter.arguments }}
        - {{ . }}
        {{- end }}
        env:
        - name: "DCGM_EXPORTER_KUBERNETES"
          value: "true"
        - name: "DCGM_EXPORTER_LISTEN"
          value: "{{ .Values.dcgmExporter.service.address }}"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        {{- if .Values.dcgmExporter.extraEnv }}
        {{- toYaml .Values.dcgmExporter.extraEnv | nindent 8 }}
        {{- end }}
        ports:
        - name: "metrics"
          containerPort: {{ .Values.dcgmExporter.service.port }}
        volumeMounts:
        - name: "pod-gpu-resources"
          readOnly: true
          mountPath: "/var/lib/kubelet/pod-resources"
        {{- if .Values.dcgmExporter.extraVolumeMounts }}
        {{- toYaml .Values.dcgmExporter.extraVolumeMounts | nindent 8 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.dcgmExporter.service.port }}
          initialDelaySeconds: 45
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.dcgmExporter.service.port }}
          initialDelaySeconds: 45
        {{- if .Values.dcgmExporter.resources }}
        resources:
          {{- toYaml .Values.dcgmExporter.resources | nindent 10 }}
        {{- end }}
