{{- if and .Values.prometheus.kubeStateMetrics.networkPolicy.enabled (eq .Values.prometheus.kubeStateMetrics.networkPolicy.flavor "cilium") }}
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  {{- if .Values.prometheus.kubeStateMetrics.annotations }}
  annotations:
    {{ toYaml .Values.prometheus.kubeStateMetrics.annotations | nindent 4 }}
  {{- end }}
  labels:
    {{- include "kube-state-metrics.labels" . | indent 4 }}
  name: {{ template "kube-state-metrics.fullname" . }}
  namespace: {{ template "kube-state-metrics.namespace" . }}
spec:
  endpointSelector:
    matchLabels:
      {{- include "kube-state-metrics.selectorLabels" . | indent 6 }}
  egress:
    {{- if and .Values.prometheus.kubeStateMetrics.networkPolicy.cilium .Values.prometheus.kubeStateMetrics.networkPolicy.cilium.kubeApiServerSelector }}
      {{ toYaml .Values.prometheus.kubeStateMetrics.networkPolicy.cilium.kubeApiServerSelector | nindent 6 }}
    {{- else }}
    - toEntities:
      - kube-apiserver
    {{- end }}
  ingress:
  - toPorts:
    - ports:
      - port: {{ .Values.prometheus.kubeStateMetrics.service.port | quote }}
        protocol: TCP
      {{- if .Values.prometheus.kubeStateMetrics.selfMonitor.enabled }}
      - port: {{ .Values.prometheus.kubeStateMetrics.selfMonitor.telemetryPort | default 8081 | quote }}
        protocol: TCP
      {{ end }}
{{ end }}
